/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    TreeNode prev=null;
    int count = 1;
    int max=0;
    public int[] findMode(TreeNode root) {
        List<Integer> modes = new ArrayList<>();
        inOrder(root,modes);
        int[] res= new int[modes.size()];
        for(int i =0;i<modes.size();i++){
            res[i] = modes.get(i);
        }
        return res;
    }

    void inOrder(TreeNode root,List<Integer> modes){
        if(root==null){
            return;
        }
        inOrder(root.left,modes);
        if(prev!=null){
            if(prev.val==root.val){
                count++;
            }else{
                count=1;
            }
        }
        if(count>max){
            max=count;
            modes.clear();
            modes.add(root.val);
        }
        else if(count==max){
            modes.add(root.val);
        }
        prev=root;
        inOrder(root.right,modes);
    }
}
